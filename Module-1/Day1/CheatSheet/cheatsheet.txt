Generating a new SSH key and adding for Mac

1. Open Terminal
2. Paste the text below, replacing the email used in the example with your GitHub email address.
   {ssh-keygen -t ed25519 -C "your_email@example.com"}
3. This creates a new SSH key, using the provided email as a label.
4. First, check to see if your ~/.ssh/config file exists in the default location.

   $ open ~/.ssh/config
  > The file /Users/YOU/.ssh/config does not exist.
5. If the file doesn't exist, create the file.
    touch ~/.ssh/config
6. ssh-keygen -t ed25519- "your_email@example.com"

Adding a new SSH key to your GitHub account

1. Copy the SSH public key to your clipboard.
   If your SSH public key file has a different name than the example code, modify the filename to match your current setup. When copying your key, don't add any newlines or whitespace.
   $ pbcopy < ~/.ssh/id_ed25519.pub
   # Copies the contents of the id_ed25519.pub file to your clipboard
  Tip: If pbcopy isn't working, you can locate the hidden .ssh folder, open the file in your favorite text editor, and copy it to your clipboard.
 
2. In the upper-right corner of any page, click your profile photo, then click Settings.
3. In the "Access" section of the sidebar, click  SSH and GPG keys.
    Click New SSH key or Add SSH key.
4. In the "Key" field, paste your public key.
   Click Add SSH key.


Generating a new SSH key and adding for  Windows:

Open terminal in git bash.
1) Then   C:\Users\SADDAM>ssh-keygen -t rsa -b 4096 -C "saddamkhan.9782@gmail.com"

2) after that  press enter .

3) then C:\Users\SADDAM>clip < .ssh/id_rsa.pub

4)then goto settings then open ssh and keys and then paste this key and save.

5) and then open repoin git in browser and then code and then from local take this from ssh git@github.com:IshaaqhShaik/JAN_WEB_DEV.git

6) then  C:\Users\SADDAM>git clone git@github.com:IshaaqhShaik/JAN_WEB_DEV.git

7) and then list and do cd JAN_WEB_DEV.
  ex:- C:\Users\SADDAM>cd JAN_WEB_DEV



Overview of Git and Todays Class !
1. What is GIT ?
Git is a DevOps tool used for source code management. 
It is a free and open-source version control system used to handle small to very large projects efficiently. 
Git is used to tracking changes in the source code, enabling multiple developers to work together on non-linear development.

2.Git Lifecycle!

You clone the Git repository as a working copy.
You modify the working copy by adding/editing files.
If necessary, you also update the working copy by taking other developer's changes.
You review the changes before commit.
You commit changes. If everything is fine, then you push the changes to the repository.
After committing, if you realize something is wrong, then you correct the last commit and push the changes to the repository.

3.Commands
  The main tool you use to determine which files are in which state is the “ git status ” command.
Ex:- $ git status 
   On branch master
  Your branch is up-to-date with 'origin/master'. 
  nothing to commit, working tree clean

In order to begin tracking a new file, you use the command git add. 
ex: git add README

The simplest way to commit is to type “ git commit “.
ex:git commit -m "message"

if you run git rm, it stages the file’s removal.
ex: git rm readme.text

To push the changes you need to give the below command.
ex: git push

If you want to rename a file in Git, you can run something like:$ git mv file_from file_to 
ex: git saddam_moved.txt saddam.txt

 to avoid merge conflicts after the pushing the commit to repository we use pull command.
 ex: git pull 